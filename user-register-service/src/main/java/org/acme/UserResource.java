package org.acme;import io.smallrye.mutiny.Multi;import io.smallrye.mutiny.Uni;import io.vertx.mutiny.pgclient.PgPool;import jakarta.ws.rs.*;import jakarta.ws.rs.GET;import jakarta.ws.rs.Path;import jakarta.ws.rs.core.Response;import jakarta.ws.rs.core.Response.Status;import jakarta.ws.rs.core.Response.ResponseBuilder;import org.acme.entity.User;import java.net.URI;@Path( "account" )public class UserResource {    private final PgPool client;    public UserResource(PgPool client) {        this.client = client;    }    @GET    public Multi<User> get() {        return User.findAll( client );    }    @GET    @Path( "{id}" )    public Uni<Response> getSingle(Long id) {        return User.findById( client , id ).onItem()                   .transform( user -> user != null ? Response.ok( user ) : Response.status( Status.NOT_FOUND ) )                   .onItem().transform( ResponseBuilder::build );    }    @POST    public Uni<Response> createUser(User user) {        return user.save( client )                   .onItem().transform( id -> URI.create( "/accout/" + id ) )                   .onItem().transform( uri -> Response.created( uri ).build() );    }    @PUT    @Path( "{id}" )    public Uni<Response> delete(Long id) {        return User.delete( client , id )                   .onItem().transform( deleted -> deleted ? Status.NO_CONTENT : Status.NOT_FOUND )                   .onItem().transform( status -> Response.status( status ).build() );    }}